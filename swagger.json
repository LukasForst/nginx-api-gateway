{
  "swagger" : "2.0",
  "info" : {
    "description" : "SWA semestral swagger",
    "version" : "1.0.0",
    "title" : "Swagger SWA",
    "termsOfService" : "http://swagger.io/terms/",
    "contact" : {
      "email" : "filip.bulander@gmail.com"
    },
    "license" : {
      "name" : "Apache 2.0",
      "url" : "http://www.apache.org/licenses/LICENSE-2.0.html"
    }
  },
  "host" : "virtserver.swaggerhub.com",
  "basePath" : "/S3283/SWA-Semestral/1.0.0",
  "schemes" : [ "https", "http" ],
  "paths" : {
    "/car" : {
      "get" : {
        "tags" : [ "car" ],
        "summary" : "Find car by ID",
        "description" : "Returns a single car",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "carId",
          "in" : "path",
          "description" : "ID of car to return",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/Car"
            }
          },
          "400" : {
            "description" : "Invalid ID supplied"
          },
          "404" : {
            "description" : "Car not found"
          }
        }
      },
      "post" : {
        "tags" : [ "car" ],
        "summary" : "Add a new car to the store",
        "operationId" : "addCar",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "Pet object that needs to be added to the store",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/Car"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/Car"
            }
          },
          "405" : {
            "description" : "Invalid input"
          }
        }
      },
      "put" : {
        "tags" : [ "car" ],
        "summary" : "Updates a car in the store",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "carId",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/Car"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/Car"
            }
          },
          "404" : {
            "description" : "Car not found"
          },
          "405" : {
            "description" : "Invalid input"
          }
        }
      },
      "delete" : {
        "tags" : [ "car" ],
        "summary" : "Deletes a car",
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [ {
          "name" : "api_key",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "carId",
          "in" : "path",
          "description" : "Car id to delete",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "400" : {
            "description" : "Invalid ID supplied"
          },
          "404" : {
            "description" : "Car not found"
          }
        }
      }
    },
    "/filteredCars" : {
      "get" : {
        "tags" : [ "cars" ],
        "summary" : "Get filtered cars for user",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "priceFrom",
          "in" : "path",
          "required" : true,
          "type" : "integer"
        }, {
          "name" : "priceTo",
          "in" : "path",
          "required" : true,
          "type" : "integer"
        }, {
          "name" : "title",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/ArrayOfCars"
            }
          },
          "400" : {
            "description" : "Invalid ID supplied"
          },
          "404" : {
            "description" : "Order not found"
          }
        }
      }
    },
    "/filter" : {
      "get" : {
        "tags" : [ "filter" ],
        "summary" : "Get filter for user",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "filterId",
          "in" : "path",
          "description" : "ID of filter that needs to be fetched",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/inline_response_200"
            }
          },
          "400" : {
            "description" : "Invalid ID supplied"
          },
          "404" : {
            "description" : "Order not found"
          }
        }
      },
      "post" : {
        "tags" : [ "filter" ],
        "summary" : "Create a filter",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "priceFrom",
          "in" : "path",
          "required" : true,
          "type" : "integer"
        }, {
          "name" : "priceTo",
          "in" : "path",
          "required" : true,
          "type" : "integer"
        }, {
          "name" : "title",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/inline_response_200_1"
            }
          },
          "400" : {
            "description" : "Invalid Order"
          }
        }
      },
      "delete" : {
        "tags" : [ "filter" ],
        "summary" : "Delete filter",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "filterId",
          "in" : "path",
          "description" : "ID of the filter that needs to be deleted",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation"
          },
          "400" : {
            "description" : "Invalid ID supplied"
          },
          "404" : {
            "description" : "Order not found"
          }
        }
      }
    },
    "/user/register" : {
      "post" : {
        "tags" : [ "user" ],
        "summary" : "Create user",
        "description" : "This can only be done by the logged in user.",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "Created user object",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/User"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation"
          },
          "400" : {
            "description" : "User exists"
          }
        }
      }
    },
    "/user/login" : {
      "get" : {
        "tags" : [ "user" ],
        "summary" : "Logs user into the system",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "username",
          "in" : "query",
          "description" : "The user name for login",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "password",
          "in" : "query",
          "description" : "The password for login in clear text",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation"
          },
          "400" : {
            "description" : "Invalid username/password supplied"
          }
        }
      }
    },
    "/user/logout" : {
      "delete" : {
        "tags" : [ "user" ],
        "summary" : "Logout user from the system and set token invalid",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "successful operation"
          }
        }
      }
    }
  },
  "definitions" : {
    "User" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int64"
        },
        "firstName" : {
          "type" : "string"
        },
        "lastName" : {
          "type" : "string"
        },
        "email" : {
          "type" : "string"
        },
        "password" : {
          "type" : "string"
        }
      }
    },
    "Car" : {
      "type" : "object",
      "required" : [ "name", "photo" ],
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int64"
        },
        "name" : {
          "type" : "string",
          "example" : "doggie"
        },
        "photo" : {
          "type" : "string"
        },
        "price" : {
          "type" : "integer"
        }
      }
    },
    "ArrayOfCars" : {
      "type" : "object",
      "properties" : {
        "list" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Car"
          }
        }
      }
    },
    "inline_response_200" : {
      "type" : "object",
      "properties" : {
        "priceFrom" : {
          "type" : "integer"
        },
        "priceTo" : {
          "type" : "integer"
        },
        "name" : {
          "type" : "string"
        }
      }
    },
    "inline_response_200_1" : {
      "type" : "object",
      "properties" : {
        "filterId" : {
          "type" : "integer"
        }
      }
    }
  },
  "externalDocs" : {
    "description" : "Find out more about Swagger",
    "url" : "http://swagger.io"
  }
}